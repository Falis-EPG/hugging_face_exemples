# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VJZcFQyuDRY0vZBy-IWnth6YDwe8mVrE
"""

!pip install transformers==4.42.4, pysentimiento==0.7.3, pandas==2.0.3, plotly==5.15.0, nltk==3.8.1, liqfit==1.0.0, gradio==4.38.1, pillow==9.4.0

!pip install torch>=2.4.0a0

!pip install --upgrade torchvision

!pip install pysentimiento

from transformers import pipeline
from pysentimiento import create_analyzer
import pandas as pd
import plotly.express as px
import nltk
from nltk.corpus import stopwords
from wordcloud import WordCloud
import matplotlib.pyplot as plt

classificador_sentimento = pipeline("sentiment-analysis", model='distilbert-base-uncased-finetuned-sst-2-english')

classificador_sentimento('I probaly not gonne buy this product again.')

modelo_analise_sentimento = create_analyzer(task='sentiment', lang='pt')

modelo_analise_sentimento.predict('''A fritadeira é sensacional, muito além do que imaginava. É linda, super funcional e muito fácil de manusear. Fácil de limpar e potente. Siper Recomendo''')

modelo_analise_sentimento.predict('''Após poucos meses de uso a carcaça de aço escovado começou a oxidar, demostrando a baixa qualidade de poteção. Fora esse detalhe, o produto cumpre o prometido''')

modelo_analise_sentimento.predict('''Em menos de 1 ano parou de funcionar, enviei para a assistência técnica por estar na garantia, trocaram o motor,
 passou a ficar menos potente e não durou 2 utilizações.
 Isso se repetiu várias vezes, até que desisti de ficar levando lá e queimando de novo em seguida,
  vi outros clientes com o mesmo problema. Não COmprem!!''')

dados = pd.read_csv('resenhas.csv')

resultados_previsao = modelo_analise_sentimento.predict(dados['Resenha'])
resultados_previsao

sentimentos = []

for resultado in resultados_previsao:
  sentimentos.append(resultado.output)

sentimentos

dados['Sentimento'] = sentimentos

dados

df_sentimento = dados.groupby('Sentimento').size().reset_index(name='Contagem')

fig = px.bar(df_sentimento, x='Sentimento', y='Contagem',
             title='Contagem de Resenhas por Sentimentos')

fig.show()

nltk.download('stopwords')
portuguese_stopwords = set(stopwords.words('portuguese'))

portuguese_stopwords

def nuvem_palavra(texto, coluna_texto, sentimento):
  texto_sentimento = texto.query(f'Sentimento == "{sentimento}"')[coluna_texto]
  texto_unido = " ".join(texto_sentimento)
  palavras = texto_unido.split()
  palavras_filtradas = [palavra for palavra in palavras if palavra not in portuguese_stopwords]
  texto_filtrado = " ".join(palavras_filtradas)

  nuvem_palavras = WordCloud(width=800, height=500, max_words=50).generate(texto_filtrado)
  plt.figure(figsize=(10,7))
  plt.imshow(nuvem_palavras, interpolation='bilinear')
  plt.axis('off')
  plt.show()

nuvem_palavra(dados, 'Resenha', 'POS')

nuvem_palavra(dados, 'Resenha', 'NEG')

nuvem_palavra(dados, 'Resenha', 'NEU')

