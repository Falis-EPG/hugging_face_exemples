# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jHmnJKbWaw5TvvTNy6Zt1BgINy_e1LXj
"""

!pip install liqfit sentencepiece

from transformers import pipeline
from liqfit.pipeline import ZeroShotClassificationPipeline
from liqfit.models import T5ForZeroShotClassification
from transformers import T5Tokenizer
import pandas as pd

classificador = pipeline('zero-shot-classification', model='facebook/bart-large-mnli')

categorias = ['eletronics', 'food', 'toys', 'books']

predicao = classificador('''
Latest model of smartphone with 5G connectivity and 128GB internal storage''', candidate_labels=categorias)

predicao

model = T5ForZeroShotClassification.from_pretrained('knowledgator/comprehend_it-multilingual-t5-base')
tokenizer = T5Tokenizer.from_pretrained('knowledgator/comprehend_it-multilingual-t5-base')
classifier = ZeroShotClassificationPipeline(model=model, tokenizer=tokenizer,
                                                      hypothesis_template = '{}', encoder_decoder = True)

descricao = '''Este water gel leve e refrescate, prporciona hidratação imediata que ajuda a aliviar o repuxante e aspereza da pele sensível'''

categorias_canditadas = ['beleza', 'cozinha', 'livros', 'artesanato']

resultado = classifier(descricao, categorias_canditadas, multi_label=False)

resultado

resultado = pd.DataFrame(resultado).drop(['sequence'], axis=1)
resultado

descricao = '''A fritadeira eletrica sem óleo start fry da elgin possui um design unico, capacidade par até 3,5 litros, potência de 1400w e revestimento antiaderente.
Seu sistema de circulação de ar ultrarapido frita e economiza energia. Sua grelha de fritura é removivel e super fácil de limpar.
Ela conta com uma proteção contra super aquecimento. Possui controle de temperatura de 80°C a 200°C que permite você programar a temperatura de preparo
 para cada tipo de alimento, timer para até 50 minutos com aviso sonoro e desligamento automático, assim você pode deixar preparando sua refeição enquanto realiza outras tarefas.'''

resultado = classifier(descricao, categorias_canditadas, multi_label=False)
resultado = pd.DataFrame(resultado).drop(['sequence'], axis=1)
resultado

dados = pd.read_csv('https://raw.githubusercontent.com/vqrca/hugging_face/main/Dados/descricoes_produtos.csv')
dados

categorias = ['eletrodomésticos', 'eletrônicos', 'beleza', 'brinquedos']

def categorizar(descricao):
  resultado = classifier(descricao, categorias, multi_label=False)
  categoria_max = max(zip(resultado['labels'], resultado['scores']), key=lambda x: x[1])[0]
  return categoria_max

dados['Categoria'] = dados['Descrição'].apply(categorizar)

dados

